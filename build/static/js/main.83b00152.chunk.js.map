{"version":3,"sources":["components/Header/Header.js","images/dummy.jpg","components/Main/Post/Post.js","components/Main/PostsList/PostsList.js","components/Main/Main.js","utils/PostsApi.js","utils/constants.js","components/Footer/Footer.js","components/App/App.js","index.js"],"names":["Header","className","Post","post","avatarLink","owner","profile_image","onClick","evt","link","preventDefault","window","open","clickHandler","alt","src","onError","e","target","onerror","dummyImg","href","rel","text","txt","document","createElement","innerHTML","value","decodeitText","title","PostsList","postList","map","item","question_id","Main","useState","loadind","setLoading","setPostList","serverError","setServerError","sortByDesc","setSortByDesc","throttleViolation","setThrottleViolation","handleGetPosts","useCallback","itemOnPage","numberOfPages","fetch","method","headers","then","res","json","data","_","filter","p","is_answered","reputation","orderBy","creation_date","handlePostListModified","items","catch","err","useEffect","length","Footer","App","extact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.83b00152.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Header.css';\n\nfunction Header() {\n  return (\n    <header className=\"header__wrapper\">\n    </header >\n  );\n}\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/dummy.b4a4c2b8.jpg\";","import React from 'react';\n\nimport './Post.css';\nimport dummyImg from '../../../images/dummy.jpg';\n\nfunction Post({ post }) {\n  const avatarLink = post.owner.profile_image;\n\n  // декодирование html тэгов\n  const decodeitText = (text) => {\n    const txt = document.createElement('textarea');\n    txt.innerHTML = text;\n    return txt.value;\n  };\n\n  // обработка клика по ячейке\n  const clickHandler = (evt, link) => {\n    evt.preventDefault();\n    window.open(link);\n  };\n\n  return (\n    <div onClick={evt => clickHandler(evt, post.link)}\n      className=\"post__container\">\n      <div className=\"post__avatar-container\">\n        <img alt='stackoverflow' className=\"post__avatar-img\"\n          src={avatarLink}\n          // установка заглушки в случае отсутствия аватара\n          onError={(e) => {\n            e.target.onerror = null; e.target.src = dummyImg;\n          }} />\n      </div>\n      <div className=\"post__content-container\">\n        <a href={post.link} target=\"_blank\" rel=\"noopener noreferrer\"\n          className=\"post__main-link\">\n          {decodeitText(post.title)}\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default Post;\n","import React from 'react';\n\nimport './PostsList.css';\n\nimport Post from '../Post/Post';\n\nfunction PostsList({ postList }) {\n  return (\n    <div className=\"postList__content\">\n      {postList.map((item) => {\n        return (\n          <Post\n            post={item}\n            key={item.question_id}\n          />);\n      })}\n    </div>\n  );\n}\n\nexport default PostsList;\n","import React, { useEffect, useState, useCallback } from 'react';\n\n// eslint-disable-next-line no-unused-vars\nimport _ from 'lodash';\n\nimport './Main.css';\n\nimport PostsList from './PostsList/PostsList';\nimport { getPosts } from '../../utils/PostsApi';\nimport {\n  minOwnerReputation, ddosError,\n} from '../../utils/constants';\n\nfunction Main() {\n  const [loadind, setLoading] = useState(true);\n  const [postList, setPostList] = useState({});\n  const [serverError, setServerError] = useState(false);\n  const [sortByDesc, setSortByDesc] = useState(true);\n  const [throttleViolation, setThrottleViolation] = useState(false);\n\n  // обработчик клика по кнопке, сортировка списка\n  const swapSort = () => {\n    sortByDesc ? setSortByDesc(false) : setSortByDesc(true);\n    setLoading(true);\n  };\n\n  // обработчик списка постов\n  const handlePostListModified = (postList) => {\n    setPostList(\n      _(postList)\n        // .filter(p => p.is_answered === true && p.owner.reputation >= 50)\n        // На мой взгляд улучшает читаемость\n        .filter(p => p.is_answered === true)\n        .filter(p => p.owner.reputation >= minOwnerReputation)\n        .orderBy(p => p.creation_date, sortByDesc ? 'desc' : 'asc')\n        .value(),\n    );\n  };\n\n  // получение списка постов с сервера\n  const handleGetPosts = useCallback(() => {\n    getPosts(100, 1) // (itemOnPage, numberOfPages)\n      .then((post) => {\n        // обработка пропуска ошибки\n        if (typeof post['error_id'] !== 'undefined') {\n          post['error_id'] === ddosError ?\n            setThrottleViolation(true) :\n            setThrottleViolation(false);\n          setServerError(true);\n          setLoading(false);\n        } else {\n          handlePostListModified(post.items);\n          setLoading(false);\n          setServerError(false);\n        }\n      })\n      .catch((err) => {\n        setServerError(true);\n        setLoading(false);\n      });\n  }, [postList, sortByDesc]);\n\n  useEffect(() => {\n    handleGetPosts();\n    // eslint-disable-next-line no-sparse-arrays\n  }, [, sortByDesc]);\n\n  return (\n    <div className=\"main__wrapper\">\n      {!loadind && postList.length !== 0 && !serverError &&\n        <button onClick={swapSort} className=\"btn main__button\">\n          {sortByDesc ? 'Fresh first' : 'Old first'}\n        </button>\n      }\n      {loadind ?\n        <div className=\"main__preloader\">Loading...</div> :\n        postList.length !== 0 && !serverError ?\n          <PostsList postList={postList} /> :\n          postList.length === 0 && !serverError ?\n            <div className=\"main__preloader\">Post not found</div> :\n            <div className=\"main__preloader\">\n              {throttleViolation ? 'So many request' : 'Server error'}\n            </div>\n      }\n    </div >\n  );\n}\n\nexport default Main;\n","import {baseUrl} from '../utils/constants';\n\nexport const getPosts = (itemOnPage, numberOfPages) => {\n  return fetch(`${baseUrl}&pagesize=${itemOnPage}&page=${numberOfPages}`, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      // 'Content-Type': 'application/json',\n      // 'Accept': '*/*',\n    },\n  })\n    .then(res => res.json())\n    .then(data => data);\n};\n","export const baseUrl = 'https://api.stackexchange.com/2.2/search?intitle=react&site=stackoverflow';\n\nexport const minOwnerReputation = 50;\n\nexport const ddosError = 502;\n","import React from 'react';\n\nimport './Footer.css';\n\nfunction Footer() {\n  return (\n    <div className=\"footer__wrapper\">\n    </div>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\n\nimport '../../utils/normalize.css';\nimport './App.css';\n\nimport Header from '../Header/Header';\nimport Main from '../Main/Main';\nimport Footer from '../Footer/Footer';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Header />\n      <div className=\"app__content\">\n        <Main extact path=\"/\" />\n      </div>\n      <Footer />\n    </div >\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './components/App/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}