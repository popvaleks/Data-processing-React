{"version":3,"sources":["components/Header/Header.js","images/dummy.jpg","components/Main/Post/Post.js","components/Main/PostsList/PostsList.js","components/Main/Main.js","utils/PostsApi.js","utils/constants.js","components/Footer/Footer.js","components/App/App.js","index.js"],"names":["Header","className","Post","post","avatarLink","owner","profile_image","onClick","evt","link","preventDefault","window","open","clickHandler","alt","src","onError","e","target","onerror","dummyImg","href","rel","text","txt","document","createElement","innerHTML","value","decodeitText","title","PostsList","postList","map","item","question_id","Main","useState","loadind","setLoading","setPostList","serverError","setServerError","sortByDesc","setSortByDesc","throttleViolation","setThrottleViolation","handleGetPosts","useCallback","itemOnPage","numberOfPages","fetch","method","headers","then","res","json","data","_","filter","p","is_answered","reputation","orderBy","creation_date","handlePostListModified","items","catch","err","useEffect","length","Footer","App","extact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9018ffac.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Header.css';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header__wrapper\">\r\n    </header >\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/dummy.b4a4c2b8.jpg\";","import React from 'react';\r\n\r\nimport './Post.css';\r\nimport dummyImg from '../../../images/dummy.jpg';\r\n\r\nfunction Post({ post }) {\r\n  const avatarLink = post.owner.profile_image;\r\n\r\n  // декодирование html тэгов\r\n  const decodeitText = (text) => {\r\n    const txt = document.createElement('textarea');\r\n    txt.innerHTML = text;\r\n    return txt.value;\r\n  };\r\n\r\n  // обработка клика по ячейке\r\n  const clickHandler = (evt, link) => {\r\n    evt.preventDefault();\r\n    window.open(link);\r\n  };\r\n\r\n  return (\r\n    <div onClick={evt => clickHandler(evt, post.link)}\r\n      className=\"post__container\">\r\n      <div className=\"post__avatar-container\">\r\n        <img alt='stackoverflow' className=\"post__avatar-img\"\r\n          src={avatarLink}\r\n          // установка заглушки в случае отсутствия аватара\r\n          onError={(e) => {\r\n            e.target.onerror = null; e.target.src = dummyImg;\r\n          }} />\r\n      </div>\r\n      <div className=\"post__content-container\">\r\n        <a href={post.link} target=\"_blank\" rel=\"noopener noreferrer\"\r\n          className=\"post__main-link\">\r\n          {decodeitText(post.title)}\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","import React from 'react';\r\n\r\nimport './PostsList.css';\r\n\r\nimport Post from '../Post/Post';\r\n\r\nfunction PostsList({ postList }) {\r\n  return (\r\n    <div className=\"postList__content\">\r\n      {postList.map((item) => {\r\n        return (\r\n          <Post\r\n            post={item}\r\n            key={item.question_id}\r\n          />);\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostsList;\r\n","import React, { useEffect, useState, useCallback } from 'react';\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nimport _ from 'lodash';\r\n\r\nimport './Main.css';\r\n\r\nimport PostsList from './PostsList/PostsList';\r\nimport { getPosts } from '../../utils/PostsApi';\r\nimport {\r\n  minOwnerReputation, ddosError,\r\n} from '../../utils/constants';\r\n\r\nfunction Main() {\r\n  const [loadind, setLoading] = useState(true);\r\n  const [postList, setPostList] = useState({});\r\n  const [serverError, setServerError] = useState(false);\r\n  const [sortByDesc, setSortByDesc] = useState(true);\r\n  const [throttleViolation, setThrottleViolation] = useState(false);\r\n\r\n  // обработчик клика по кнопке, сортировка списка\r\n  const handleSwapSort = () => {\r\n    setPostList(\r\n      _(postList)\r\n        .orderBy(p => p.creation_date, sortByDesc ? 'asc' : 'desc')\r\n        .value(),\r\n    );\r\n    sortByDesc ? setSortByDesc(false) : setSortByDesc(true);\r\n  };\r\n\r\n  // обработчик списка постов\r\n  const handlePostListModified = (postList) => {\r\n    setPostList(\r\n      _(postList)\r\n        // .filter(p => p.is_answered === true && p.owner.reputation >= 50)\r\n        // На мой взгляд улучшает читаемость\r\n        .filter(p => p.is_answered === true)\r\n        .filter(p => p.owner.reputation >= minOwnerReputation)\r\n        .orderBy(p => p.creation_date, sortByDesc ? 'desc' : 'asc')\r\n        .value(),\r\n    );\r\n  };\r\n\r\n  // получение списка постов с сервера\r\n  const handleGetPosts = useCallback(() => {\r\n    getPosts(100, 1) // (itemOnPage, numberOfPages)\r\n      .then((post) => {\r\n        // обработка пропуска ошибки\r\n        if (typeof post['error_id'] !== 'undefined') {\r\n          post['error_id'] === ddosError ?\r\n            setThrottleViolation(true) :\r\n            setThrottleViolation(false);\r\n          setServerError(true);\r\n          setLoading(false);\r\n        } else {\r\n          handlePostListModified(post.items);\r\n          setLoading(false);\r\n          setServerError(false);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setServerError(true);\r\n        setLoading(false);\r\n      });\r\n  }, [postList]);\r\n\r\n  useEffect(() => {\r\n    handleGetPosts();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"main__wrapper\">\r\n      {!loadind && postList.length !== 0 && !serverError &&\r\n        <button onClick={handleSwapSort} className=\"btn main__button\">\r\n          {sortByDesc ? 'New first' : 'Old first'}\r\n        </button>\r\n      }\r\n      {loadind ?\r\n        <div className=\"main__preloader\">Loading...</div> :\r\n        postList.length !== 0 && !serverError ?\r\n          <PostsList postList={postList} /> :\r\n          postList.length === 0 && !serverError ?\r\n            <div className=\"main__preloader\">Post not found</div> :\r\n            <div className=\"main__preloader\">\r\n              {throttleViolation ? 'So many request' : 'Server error'}\r\n            </div>\r\n      }\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import {baseUrl} from '../utils/constants';\r\n\r\nexport const getPosts = (itemOnPage, numberOfPages) => {\r\n  return fetch(`${baseUrl}&pagesize=${itemOnPage}&page=${numberOfPages}`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      // 'Content-Type': 'application/json',\r\n      // 'Accept': '*/*',\r\n    },\r\n  })\r\n    .then(res => res.json())\r\n    .then(data => data);\r\n};\r\n","export const baseUrl = 'https://api.stackexchange.com/2.2/search?intitle=react&site=stackoverflow';\r\n\r\nexport const minOwnerReputation = 50;\r\n\r\nexport const ddosError = 502;\r\n","import React from 'react';\r\n\r\nimport './Footer.css';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className=\"footer__wrapper\">\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nimport '../../utils/normalize.css';\r\nimport './App.css';\r\n\r\nimport Header from '../Header/Header';\r\nimport Main from '../Main/Main';\r\nimport Footer from '../Footer/Footer';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Header />\r\n      <div className=\"app__content\">\r\n        <Main extact path=\"/\" />\r\n      </div>\r\n      <Footer />\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './components/App/App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}